// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Natsume.Persistence;

#nullable disable

namespace Natsume.Migrations
{
    [DbContext(typeof(NatsumeDbContext))]
    [Migration("20250810124540_ChangedLog10toLn")]
    partial class ChangedLog10toLn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Natsume.Persistence.Contact.NatsumeContact", b =>
                {
                    b.Property<ulong>("DiscordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentFavor")
                        .HasPrecision(18, 6)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DailyAverageFavorExpended")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("CASE WHEN (JULIANDAY(COALESCE([LastInteraction], [MetOn])) - JULIANDAY([MetOn])) > 0 \nTHEN [TotalFavorExpended] / (JULIANDAY([LastInteraction]) - JULIANDAY([MetOn])) \nELSE 0 END", false);

                    b.Property<string>("DiscordNickname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Friendship")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("(100 * [TotalFavorExpended] * (1 + [TimeFriendship] + [MessageFriendship]))", false);

                    b.Property<bool>("IsFriend")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastBondUp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastInteraction")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaximumFavor")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("(1 + [TimeFriendship] + [MessageFriendship])", false);

                    b.Property<decimal>("MessageFriendship")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("(LN(1 + [TotalInteractions]) * LN(1 + [TotalInteractions]) / 100.0)", false);

                    b.Property<DateTime>("MetOn")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TimeFriendship")
                        .HasPrecision(18, 6)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalFavorExpended")
                        .HasPrecision(18, 6)
                        .HasColumnType("TEXT");

                    b.Property<ulong>("TotalInteractions")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscordId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Natsume.Persistence.Meeting.NatsumeMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRandomMeeting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MeetingName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("Natsume.Persistence.Reminder.NatsumeReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RemindMeAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReminderText")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reminders");
                });
#pragma warning restore 612, 618
        }
    }
}
